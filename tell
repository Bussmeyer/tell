#!/bin/bash

BGreen='\e[1;32m'       # Green
BRed='\e[1;31m'         # Red
Color_Off='\e[0m'       # Text Reset

repo=$1

function setStatusMessage {
    printf "${IRed} --> ${BGreen}$1${Color_Off}\n" 1>&2
}

function triggerError {
    printf "${BRed} --> $1 ${Color_Off}\n" 1>&2
    exit 1
}

# Check whether a command exists
function exists {
  if command -v $1 >/dev/null 2>&1
  then
    return 0
  else
    return 1
  fi
}

# credits https://github.com/boxcutter/osx/blob/master/script/xcode-cli-tools.sh
function install_xcode_cli_tools {
    if [[ ! -f "/Library/Developer/CommandLineTools/usr/bin/clang" ]]; then
        setStatusMessage "Install the CLT"
        # Get and install Xcode CLI tools
        OSX_VERS=$(sw_vers -productVersion | awk -F "." '{print $2}')

        # on 10.9+, we can leverage SUS to get the latest CLI tools
        if [ "$OSX_VERS" -ge 9 ]; then
            # create the placeholder file that's checked by CLI updates' .dist code
            # in Apple's SUS catalog
            touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress
            # find the CLI Tools update
            PROD=$(softwareupdate -l | grep "\*.*Command Line" | head -n 1 | awk -F"*" '{print $2}' | sed -e 's/^ *//' | tr -d '\n')
            # install it
            softwareupdate -i "$PROD" --verbose
            rm /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress

        # on 10.7/10.8, we instead download from public download URLs, which can be found in
        # the dvtdownloadableindex:
        # https://devimages.apple.com.edgekey.net/downloads/xcode/simulators/index-3905972D-B609-49CE-8D06-51ADC78E07BC.dvtdownloadableindex
        else
            setStatusMessage "Please update your mac."
            exit
        fi
    fi
}

function install_ansible {
    if ! exists pip; then
        setStatusMessage "Install PIP"
        sudo easy_install --quiet pip nose tornado
    fi
    if ! exists ansible; then
        setStatusMessage "Install Ansible"
        pip install --upgrade setuptools --user python
        sudo pip install -q ansible
    fi
}

function check_for_sudo {
    setStatusMessage "Checking if we need to ask for a sudo password"

    sudo -v
    #export ANSIBLE_ASK_SUDO_PASS=True

    setStatusMessage "Keep-alive: update existing sudo time stamp until we are finished"
    while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
}

function install_ansible_roles {
    setStatusMessage "Get all the required roles"
    ansible-galaxy install -f -r requirements.yml
}

function run_ansible_playbook {
    setStatusMessage "Running the ansible playbook for your lovely macbook."
    ansible-playbook main.yml -i inventory -K
}


check_for_sudo
export HOMEBREW_CASK_OPTS="--appdir=/Applications"
install_xcode_cli_tools
install_ansible
install_ansible_roles
run_ansible_playbook
