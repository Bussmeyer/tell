---
- hosts: all
  connection: local

  roles:
    - bussmeyer.dotfiles
    - geerlingguy.homebrew
    - viasite-ansible.zsh

  vars:
    composer_packages:
      - name: hirak/prestissimo
      - name: drush/drush
        version: '^8.1'
      - name: squizlabs/php_codesniffer
    homebrew_taps:
      - homebrew/core
      - caskroom/cask
      - caskroom/versions
      - codekitchen/dinghy
    homebrew_cask_apps:
      # install applications for all users
      - box-sync
      - cisco-proximity
      - disk-inventory-x
      - drawio
      - gimp
      - google-backup-and-sync
      - google-chrome
      - keeweb
      - licecap
      - michaelvillar-timer
      - microsoft-teams
      - musicbrainz-picard
      - openemu
      - owncloud
      - plex-media-player
      - sixtyforce
      - spectacle
      - steam
      - the-unarchiver
      - vlc
      - vox
      - vox-preferences-pane
      - yed
      - youtube-to-mp3
      - zoom
      # developer apps
      - atom
      - cyberduck
      - db-browser-for-sqlite
      - docker
      - keepassx
      - kitematic
      - imagealpha
      - imageoptim
      - istat-menus
      - iterm2
      - macdown
      - mamp
      - pgadmin4
      - phpstorm
      - postman
      - sequel-pro
      - sketch
      - sourcetree
      - sublime-text
      - tableau
      - tableau-reader
      - vagrant
      - vmware-fusion
      - virtualbox
      - webstorm
      - wireshark
      # install quick look plugins for all users
      - qlcolorcode
      - qlstephen
      - qlmarkdown
      - quicklook-json
      - qlprettypatch
      - quicklook-csv
      - qlimagesize
      - webpquicklook
      - suspicious-package
    homebrew_installed_packages:
      - composer
      - coreutils
      - docker
      - docker-compose
      - docker-machine
      - docker-machine-driver-xhyve
      - dinghy
      - findutils
      - fzf
      - git
      - git-extras
      - gnu-tar
      - htop
      - moreutils
      - mysql
      - nvm
      - python
      - rbenv
      - rsync
      - sqlmap
      - tree
      - wget
      - yarn
      - zsh
      - zsh-completions
    npm_packages:
      - name: grunt
    osx_defaults:
      - domain: 'com.apple.screencapture'
        key: 'type'
        type: string
        value: png
      - domain: 'com.apple.desktopservices' # http://www.defaults-write.com/disable-the-creation-of-ds_store-files/
        key: 'DSDontWriteNetworkStores'
        type: boolean
        value: true
      - domain: 'com.apple.print.PrintingPrefs' # Automatically quit printer app once the print jobs complete
        key: 'Quit When Finished'
        type: boolean
        value: true
      - domain: 'com.apple.Safari'
        key: 'IncludeInternalDebugMenu'
        type: boolean
        value: true
      - domain: 'com.apple.Safari'
        key: 'IncludeDevelopMenu'
        type: boolean
        value: true
      - domain: 'com.apple.Safari'
        key: 'WebKitDeveloperExtrasEnabledPreferenceKey'
        type: boolean
        value: true
      - domain: 'com.apple.Safari'
        key: 'com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled'
        type: boolean
        value: true
      - domain: 'NSGlobalDomain'
        key: 'WebKitDeveloperExtras'
        type: boolean
        value: true
      - domain: 'NSGlobalDomain'
        key: 'AppleEnableMenuBarTransparency'
        type: boolean
        value: true
      - domain: 'com.apple.menuextra.battery'
        key: 'ShowPercent'
        type: string
        value: "NO"
      - domain: 'com.apple.menuextra.battery'
        key: 'ShowTime'
        type: string
        value: "YES"
      - domain: 'com.apple.dock'
        key: 'launchanim'
        type: bool
        value: true
      - domain: 'com.apple.dock'
        key: 'tilesize'
        type: float
        value: 32
      - domain: 'com.apple.menuextra.clock'
        key: 'DateFormat'
        type: string
        value: "EEE MMM d  h:mm a"
      - domain: 'com.apple.menuextra.battery'
        key: 'ShowPercent'
        type: string
        value: "YES"
      - domain: 'com.apple.LaunchServices'
        key: 'LSQuarantine'
        type: bool
        value: true
    dockitems_to_remove:
      - Microsoft Outlook
      - Microsoft Word
      - Microsoft Excel
      - Microsoft PowerPoint
      - Vorschau
      - Lion Store
      - Enterprise Connect
      - Karten
      - Fotos
    dockitems_to_persist:
      - name: Google Chrome
        path: "/Applications/Google Chrome.app"
        pos: 1
      - name: Firefox
        path: "/Applications/Firefox.app"
        pos: 2
      - name: Safari
        path: "/Applications/Safari.app"
        pos: 3
      - name: iTerm
        path: "/Applications/iTerm.app"
        pos: 4
      - name: Notes
        path: "/Applications/Notes.app"
        pos: 5
      - name: Messages
        path: "/Applications/Messages.app"
        pos: 6
    zsh_autosuggestions_bind_key: "^U"
    zsh_antigen_bundles_extras:
      - composer
      - git-flow
      - nvm
      - { name: osx, when: "{{ ansible_os_family == 'Darwin' }}" }

  tasks:
    - name: set mac defaults
      osx_defaults: domain="{{ item.domain }}" key="{{ item.key }}" type="{{ item.type }}" value="{{ item.value }}" state=present
      with_items: "{{ osx_defaults }}"
      tags:
        - osx
    - name: Remove all crap from Dock
      shell: dockutil --remove '{{ item }}'
      with_items: "{{ dockitems_to_remove }}"
      tags:
        - osx
    - name: Check if items in dock exist
      shell: dockutil --find '{{ item.name }}' || dockutil --add '{{ item.path }}'
      with_items: "{{ dockitems_to_persist }}"
      tags:
        - osx
    - name: Fix order of items in dock
      shell: dockutil --move '{{ item.name }}' --position {{ item.pos }}
      with_items: "{{ dockitems_to_persist }}"
      tags:
        - osx
    - name: create /tmp/powerline directory
      file: path=/tmp/powerline state=directory
      tags:
        - shell
    - name: git clone Powerline fonts repository
      git: repo='https://github.com/powerline/fonts.git' dest=/tmp/powerline
      tags:
        - shell
    - name: install script of Powerline fonts
      command: /tmp/powerline/install.sh
      tags:
        - shell
    - name: cleanup Powerline fonts installation
      file: path=/tmp/powerline state=absent
      tags:
        - shell
    - name: Import iTerm2 settings, incl. fonts
      copy:
        src: templates/com.googlecode.iterm2.plist
        dest: ~/Library/Preferences/com.googlecode.iterm2.plist
      tags:
        - shell
    - name: ".zshrc.local"
      template:
        src: templates/zshrc.local
        dest: ~/.zshrc.local
      tags:
        - dotfiles
    - name: Install global Composer packages.
      composer:
        command: "{{ (item.state | default('present') == 'absent') | ternary('remove', 'require') }}"
        arguments: "{{ item.name | default(item) }} {{ item.version | default('@stable') }}"
        # Ansible 2.4 supports `global_command` making `working_dir` optional.
        working_dir: "{{ lookup('env', 'COMPOSER_HOME') | default('~/.composer', true) }}"
      with_items: "{{ composer_packages }}"
      tags:
        - composer
    - name: Install global Ruby gems.
      gem:
        name: "{{ item.name | default(item) }}"
        state: "{{ item.state | default('present') }}"
        version: "{{ item.version | default(omit) }}"
        user_install: no
        executable: "{{ item.executable | default(omit) }}"
      with_items: "{{ gem_packages }}"
      tags:
        - gems
    - name: Install global NPM packages.
      npm:
        name: "{{ item.name | default(item) }}"
        state: "{{ item.state | default('present') }}"
        version: "{{ item.version | default(omit) }}"
        global: yes
        executable: "{{ item.executable | default(omit) }}"
      with_items: "{{ npm_packages }}"
      tags:
        - npm
    - name: create ~/Projects directory
      file: path=~/Projects state=directory
      tags:
        - projects
    - name: Restart SystemUIServer e.g. show date in menu
      command: killall SystemUIServer
      tags:
        - osx
