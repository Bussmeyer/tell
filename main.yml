---
- hosts: all
  connection: local

  roles:
    - bussmeyer.dotfiles
    - geerlingguy.homebrew
    - viasite-ansible.zsh

  vars:
    gem_packages: []
    composer_packages:
      - name: hirak/prestissimo
      - name: drush/drush
        version: '^8.1'
      - name: squizlabs/php_codesniffer
    homebrew_taps:
      - homebrew/core
      - caskroom/cask
      - caskroom/versions
      - codekitchen/dinghy
    homebrew_cask_apps:
      # install applications for all users
      - adobe-acrobat-reader
      - box-sync
      - cisco-proximity
      - disk-inventory-x
      - drawio
      - gimp
      - google-backup-and-sync
      - google-chrome
      - keeweb
      - licecap
      - michaelvillar-timer
      - microsoft-teams
      - musicbrainz-picard
      - openemu
      - owncloud
      - plex-media-player
      - sixtyforce
      - spectacle
      - steam
      - the-unarchiver
      - vlc
      - vox
      - vox-preferences-pane
      - yed
      - youtube-to-mp3
      - zoomus
      # developer apps
      - atom
      - cyberduck
      - db-browser-for-sqlite
      - docker
      - keepassx
      - kitematic
      - imagealpha
      - imageoptim
      - istat-menus
      - iterm2
      - macdown
      - mamp
      - pgadmin4
      - phpstorm
      - postman
      - powershell
      - sequel-pro
      - sketch
      - sourcetree
      - sublime-text
      - tableau
      - tableau-reader
      - table-tool
      - vagrant
      - vmware-fusion
      - virtualbox
      - webstorm
      - wireshark
      # install quick look plugins for all users
      - qlcolorcode
      - qlstephen
      - qlmarkdown
      - quicklook-json
      - qlprettypatch
      - quicklook-csv
      - qlimagesize
      - webpquicklook
      - suspicious-package
    homebrew_installed_packages:
      - composer
      - coreutils
      - docker
      - docker-compose
      - docker-machine
      - docker-machine-driver-xhyve
      - dinghy
      - findutils
      - fzf
      - git
      - git-extras
      - gnu-tar
      - htop
      - lzop
      - moreutils
      - mysql
      - nvm
      - python
      - rbenv
      - rsync
      - sqlmap
      - tree
      - wget
      - yarn
      - zsh
      - zsh-completions
    npm_packages:
      - name: grunt
    pip_packages:
      - name: virtualenv
    osx_defaults:
      ###############################################################################
      # MenuBar                                                                     #
      ###############################################################################
      - domain: 'com.apple.menuextra.clock'
        key: 'DateFormat'
        type: string
        value: "EEE MMM d  h:mm a"
      - domain: 'NSGlobalDomain'
        key: 'AppleEnableMenuBarTransparency'
        type: boolean
        value: true
      - domain: 'com.apple.menuextra.battery'
        key: 'ShowPercent'
        type: string
        value: "YES"
      - domain: 'com.apple.menuextra.battery'
        key: 'ShowTime'
        type: string
        value: "NO"
      - domain: 'com.apple.systemuiserver'
        key: 'menuExtras'
        type: array
        value:
          - "/System/Library/CoreServices/Menu Extras/Bluetooth.menu"
          - "/System/Library/CoreServices/Menu Extras/AirPort.menu"
          - "/System/Library/CoreServices/Menu Extras/Battery.menu"
          - "/System/Library/CoreServices/Menu Extras/Clock.menu"
          - "/System/Library/CoreServices/Menu Extras/User.menu"
          - "/System/Library/CoreServices/Menu Extras/Volume.menu"

      ###############################################################################
      # to be clustered                                                             #
      ###############################################################################
      - domain: 'com.googlecode.iterm2'
        key: 'PromptOnQuit'
        type: bool
        value: false
      - domain: 'com.apple.desktopservices' # http://www.defaults-write.com/disable-the-creation-of-ds_store-files/
        key: 'DSDontWriteNetworkStores'
        type: boolean
        value: true
      - domain: 'com.apple.Safari'
        key: 'IncludeInternalDebugMenu'
        type: boolean
        value: true
      - domain: 'com.apple.Safari'
        key: 'IncludeDevelopMenu'
        type: boolean
        value: true
      - domain: 'com.apple.Safari'
        key: 'WebKitDeveloperExtrasEnabledPreferenceKey'
        type: boolean
        value: true
      - domain: 'com.apple.Safari'
        key: 'com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled'
        type: boolean
        value: true
      - domain: 'NSGlobalDomain'
        key: 'WebKitDeveloperExtras'
        type: boolean
        value: true

      ###############################################################################
      # General UI/UX                                                               #
      ###############################################################################
      - domain: 'com.apple.LaunchServices' # Turn off the 'Application Downloaded from Internet' quarantine warning
        key: 'LSQuarantine'
        type: bool
        value: false
      - domain: 'com.apple.screencapture'
        key: 'type'
        type: string
        value: png
      - domain: 'com.apple.screencapture'
        key: 'location'
        type: string
        value: "$HOME/Desktop"
      - domain: 'com.apple.print.PrintingPrefs' # Automatically quit printer app once the print jobs complete
        key: 'Quit When Finished'
        type: boolean
        value: true
      - domain: 'NSGlobalDomain'
        key: 'NSNavPanelExpandedStateForSaveMode'
        type: boolean
        value: true
      - domain: 'com.apple.CrashReporter' # Disable the crash reporter (quit dialog after an application crash) (default: 'crashreport')
        key: 'DialogType'
        type: string
        value: "none"
      - domain: 'NSGlobalDomain' # Disable automatic capitalization as it’s annoying when typing code
        key: 'NSAutomaticCapitalizationEnabled'
        type: bool
        value: false
      - domain: 'NSGlobalDomain' # Enable smart dashes as they’re annoying when typing code
        key: 'NSAutomaticDashSubstitutionEnabled'
        type: bool
        value: true
      - domain: 'NSGlobalDomain' # Disable automatic period substitution as it’s annoying when typing code
        key: 'NSAutomaticPeriodSubstitutionEnabled'
        type: bool
        value: false

      ###############################################################################
      # Trackpad, mouse, keyboard, Bluetooth accessories, and input                 #
      ###############################################################################
      # Enable Trackpad Gestures
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'Clicking'
        type: int
        value: 1
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'DragLock'
        type: int
        value: 0
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'Dragging'
        type: int
        value: 0
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadCornerSecondaryClick'
        type: int
        value: 0
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadFiveFingerPinchGesture'
        type: int
        value: 2
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadFourFingerHorizSwipeGesture'
        type: int
        value: 2
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadFourFingerPinchGesture'
        type: int
        value: 2
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadFourFingerVertSwipeGesture'
        type: int
        value: 2
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadHandResting'
        type: int
        value: 1
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadHorizScroll'
        type: int
        value: 1
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadMomentumScroll'
        type: int
        value: 1
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadPinch'
        type: int
        value: 1
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadRightClick'
        type: int
        value: 1
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadRotate'
        type: int
        value: 1
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadScroll'
        type: int
        value: 1
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadThreeFingerDrag'
        type: int
        value: 0
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadThreeFingerHorizSwipeGesture'
        type: int
        value: 2
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadThreeFingerTapGesture'
        type: int
        value: 0
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadThreeFingerVertSwipeGesture'
        type: int
        value: 2
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadTwoFingerDoubleTapGesture'
        type: int
        value: 1
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'TrackpadTwoFingerFromRightEdgeSwipeGesture'
        type: int
        value: 3
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'USBMouseStopsTrackpad'
        type: int
        value: 0
      - domain: 'com.apple.driver.AppleBluetoothMultitouch.trackpad'
        key: 'UserPreferences'
        type: int
        value: 1
      # Enable tap to click on trackpad
      - domain: 'NSGlobalDomain'
        key: 'com.apple.mouse.tapBehavior '
        type: int
        value: 1
      # Enable full keyboard access for all controls (e.g. enable Tab in modal dialogs)
      - domain: 'NSGlobalDomain'
        key: 'AppleKeyboardUIMode'
        type: int
        value: 3

      ###############################################################################
      # Finder                                                                      #
      ###############################################################################
      #  Use list view in all Finder windows by default
      # Four-letter codes for the other view modes: `clmv` (?), `icnv` (icon), `Nlsv` (list), `Flwv` (cover flow)
      - domain: 'com.apple.finder'
        key: 'FXPreferredViewStyle'
        type: string
        value: "Nlsv"
      - domain: 'com.apple.finder'
        key: 'SearchRecentsSavedViewStyle'
        type: string
        value: "Nlsv"
      - domain: 'com.apple.finder'
        key: 'QLEnableTextSelection'
        type: bool
        value: true
      # Set Desktop as the default location for new Finder windows use `PfHm`
      # For other paths, use `PfLo` and `file:///full/path/here/`
      - domain: 'com.apple.finder'
        key: 'NewWindowTarget'
        type: string
        value: "PfLo"
      - domain: 'com.apple.finder'
        key: 'NewWindowTargetPath'
        type: string
        value: "file:///Users/thobussm/"
      # Show status bar
      - domain: 'com.apple.finder'
        key: 'ShowStatusBar'
        type: bool
        value: true
      # Show path (breadcrumb) bar
      - domain: 'com.apple.finder'
        key: 'ShowPathbar'
        type: bool
        value: true
      # Display full POSIX path as Finder window title
      - domain: 'com.apple.finder'
        key: '_FXShowPosixPathInTitle'
        type: bool
        value: true
      # Show preview pane
      - domain: 'com.apple.finder'
        key: 'ShowPreviewPane'
        type: bool
        value: false
      # Allowing text selection in Quick Look/Preview in Finder by default
      - domain: 'com.apple.finder'
        key: 'QLEnableTextSelection'
        type: bool
        value: true
      ###############################################################################
      # Dock, Dashboard, and hot corners                                            #
      ###############################################################################
      # Hot corners
      # Possible values:
      #  0: no-op
      #  2: Mission Control
      #  3: Show application windows
      #  4: Desktop
      #  5: Start screen saver
      #  6: Disable screen saver
      #  7: Dashboard
      # 10: Put display to sleep
      # 11: Launchpad
      # 12: Notification Center
      # Top left screen corner → Desktop
      - domain: 'com.apple.dock'
        key: 'wvous-tl-corner'
        type: int
        value: 4
      - domain: 'com.apple.dock'
        key: 'wvous-tl-modifier'
        type: int
        value: 0
      # Top right screen corner → Mission Control
      - domain: 'com.apple.dock'
        key: 'wvous-tr-corner'
        type: int
        value: 2
      - domain: 'com.apple.dock'
        key: 'wvous-tr-modifier'
        type: int
        value: 0
      # Bottom left screen corner → Desktop
      - domain: 'com.apple.dock'
        key: 'wvous-bl-corner'
        type: int
        value: 4
      - domain: 'com.apple.dock'
        key: 'wvous-bl-modifier'
        type: int
        value: 0
      # Bottom right screen corner → Mission Control
      - domain: 'com.apple.dock'
        key: 'wvous-br-corner'
        type: int
        value: 2
      - domain: 'com.apple.dock'
        key: 'wvous-br-modifier'
        type: int
        value: 0
      # Disable dashboard widgets (saves RAM)
      - domain: 'com.apple.dashboard'
        key: 'mcx-disabled'
        type: bool
        value: true
      # Disable Mission Control
      - domain: 'com.apple.Dock'
        key: 'mcx-expose-disabled'
        type: bool
        value: false
      # Enable the 2D Dock
      - domain: 'com.apple.dock'
        key: 'no-glass'
        type: bool
        value: true
      - domain: 'com.apple.dock'
        key: 'launchanim'
        type: bool
        value: true
      - domain: 'com.apple.dock'
        key: 'tilesize'
        type: float
        value: 32

    dockitems_to_remove:
      - Microsoft Outlook
      - Microsoft Word
      - Microsoft Excel
      - Microsoft PowerPoint
      - Vorschau
      - Lion Store
      - Enterprise Connect
      - Karten
      - Fotos
    dockitems_to_persist:
      - name: Google Chrome
        path: "/Applications/Google Chrome.app"
        pos: 1
      - name: Firefox
        path: "/Applications/Firefox.app"
        pos: 2
      - name: Safari
        path: "/Applications/Safari.app"
        pos: 3
      - name: iTerm
        path: "/Applications/iTerm.app"
        pos: 4
      - name: Atom
        path: "/Applications/Atom.app"
        pos: 5
      - name: Notes
        path: "/Applications/Notes.app"
        pos: 6
      - name: Messages
        path: "/Applications/Messages.app"
        pos: 7
    zsh_autosuggestions_bind_key: "^U"
    zsh_antigen_bundles_extras:
      - composer
      - git-flow
      - nvm
      - { name: osx, when: "{{ ansible_os_family == 'Darwin' }}" }

  tasks:
    - name: set mac defaults
      osx_defaults: domain="{{ item.domain }}" key="{{ item.key }}" type="{{ item.type }}" value="{{ item.value }}" state=present
      with_items: "{{ osx_defaults }}"
      tags:
        - osx
    - name: Remove all crap from Dock
      shell: dockutil --remove '{{ item }}'
      with_items: "{{ dockitems_to_remove }}"
      tags:
        - osx
    - name: Check if items in dock exist
      shell: dockutil --find '{{ item.name }}' || dockutil --add '{{ item.path }}'
      with_items: "{{ dockitems_to_persist }}"
      tags:
        - osx
    - name: Fix order of items in dock
      shell: dockutil --move '{{ item.name }}' --position {{ item.pos }}
      with_items: "{{ dockitems_to_persist }}"
      tags:
        - osx
    - name: create /tmp/powerline directory
      file: path=/tmp/powerline state=directory
      tags:
        - shell
    - name: git clone Powerline fonts repository
      git: repo='https://github.com/powerline/fonts.git' dest=/tmp/powerline
      tags:
        - shell
    - name: install script of Powerline fonts
      command: /tmp/powerline/install.sh
      tags:
        - shell
    - name: cleanup Powerline fonts installation
      file: path=/tmp/powerline state=absent
      tags:
        - shell
    - name: Import iTerm2 settings, incl. fonts
      copy:
        src: templates/com.googlecode.iterm2.plist
        dest: ~/Library/Preferences/com.googlecode.iterm2.plist
      tags:
        - shell
    - name: ".zshrc.local"
      template:
        src: templates/zshrc.local
        dest: ~/.zshrc.local
      tags:
        - dotfiles
    - name: Install global Composer packages.
      composer:
        command: "{{ (item.state | default('present') == 'absent') | ternary('remove', 'require') }}"
        arguments: "{{ item.name | default(item) }} {{ item.version | default('@stable') }}"
        # Ansible 2.4 supports `global_command` making `working_dir` optional.
        working_dir: "{{ lookup('env', 'COMPOSER_HOME') | default('~/.composer', true) }}"
      with_items: "{{ composer_packages }}"
      tags:
        - composer
    - name: Install global Ruby gems.
      gem:
        name: "{{ item.name | default(item) }}"
        state: "{{ item.state | default('present') }}"
        version: "{{ item.version | default(omit) }}"
        user_install: no
        executable: "{{ item.executable | default(omit) }}"
      with_items: "{{ gem_packages }}"
      tags:
        - gems
    - name: Install global NPM packages.
      npm:
        name: "{{ item.name | default(item) }}"
        state: "{{ item.state | default('present') }}"
        version: "{{ item.version | default(omit) }}"
        global: yes
        executable: "{{ item.executable | default(omit) }}"
      with_items: "{{ npm_packages }}"
      tags:
        - npm
    - name: Install python packages.
      pip:
        name: "{{ item.name | default(item) }}"
      with_items: "{{ pip_packages }}"
      tags:
        - pip  
    - name: create ~/Projects directory
      file: path=~/Projects state=directory
      tags:
        - projects
    - name: Restart SystemUIServer e.g. show date in menu
      command: killall SystemUIServer
      tags:
        - osx
